<%- include("../layouts/header") %>
<% const dateFormat = (d) =>
[d.getFullYear(),d.getMonth() + 1, d.getDate()].join("-") + " " + [d.getHours(),
d.getMinutes(), d.getSeconds()].join(":") %>

<% if(recipe) { %>
<style>
    .overlay{
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 10;
        background-color: rgba(0,0,0,0.5);    
    }
</style>
<div class="mt-3 container">    
    <div class="modal fade" tabindex="-1" id="exampleModal">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Delete Comment</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <p>Are you sure want to delete this comment?</p>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary confirm">Yes</button>
            </div>
          </div>
        </div>
      </div>

    <div class="card col-6 m-auto mb-3">
        <div class="align-items-center card-header d-flex justify-content-between">
          <div class="align-items-center d-flex">
            <img
              src="<%= recipe?.User?.avatar%>"
              alt=""
              style="height: 32px; height: 32px"
              class="rounded-circle"
            />
            <div class="d-flex flex-column ms-3">
              <h6 class="m-0">
                <%= locals?.user?.first_name%> <%= locals?.user?.last_name%>
              </h6>
              <span class="m-0" style="font-size: 14px"
                ><%= dateFormat(recipe.updatedAt) %></span
              >
            </div>
          </div>
          <div>
            <% if(locals.user) { %>
              <% if(recipe?.Favourites?.length) { %>
                <a href="javascript:void(0)" class="btn btn-sm btn-danger favourite" data-id="<%= recipe.id %>" data-type="recipe" data-is-favourite="true">Unfavourite</a>
              <% } else { %>
                <a href="javascript:void(0)" class="btn btn-sm btn-info favourite" data-id="<%= recipe.id %>" data-type="recipe" data-is-favourite="false">Favourite</a>
              <% } %>
             <% if(locals.user.id == recipe.UserId){ %>
                <a href="/recipe/<%= recipe.id %>/edit" class="btn btn-sm btn-info"
                  >Edit</a
                >
                <a href="/recipe/<%= recipe.id %>/delete" class="btn btn-sm btn-danger"
                  >Delete</a
                >
              <% } %>
           <% } %>
            <% if(locals?.canVerify){ %>
                <% if(recipe.status == "1"){ %>
                    <a href="javascript:void(0)" class="btn btn-sm btn-danger publish" data-id="<%= recipe.id %>" data-is-published="true">
                        Unpublish
                    </a>
                <% } else { %>
                    <a href="javascript:void(0)" class="btn btn-sm btn-info publish" 
                    
                    style="display: <%= recipe.status == "2" ? "none" : "inline-block" %>"
                    data-id="<%= recipe.id %>" data-is-published="false">
                        Publish
                    </a>
                <% } %>
                               
                <%  if(recipe.status != "2"){ %>
                    <a href="javascript:void(0)" class="btn btn-sm btn-danger reject" data-id="<%= recipe.id %>" data-is-rejected="false">
                        Reject
                    </a>
                <% } else if(recipe.status == "2") { %>
                    <a href="javascript:void(0)" class="btn btn-sm btn-info reject" data-id="<%= recipe.id %>" data-is-rejected="true">
                        Restore
                    </a>
                <% } %>
            <% } %>
          </div>
        </div>
        <div class="card-body position-relative">
        <div class="<%= recipe.status == enums.Status.REJECTED ? "overlay" : ""%>"></div>
          <h5 class="card-title"><%= recipe.name %></h5>
          <div class="col-6 d-flex flex-nowrap row">
            <table class="ms-3 table table-bordered">
              <tr>
                <td>Cooking Style</td>
                <td>
                  <%= locals?.enums?.CookingStyle[recipe.cooking_style][0] +
                  locals?.enums?.CookingStyle[recipe.cooking_style].slice(1).toLowerCase()
                  %>
                </td>
              </tr>
              <tr>
                <td>Preservable</td>
                <td><%= recipe.preserve %></td>
              </tr>
              <tr>
                <td>Category</td>
                <td>
                  <% recipe.category.split(",").forEach(c => { %> <%=
                  locals?.enums?.Category[c][0] +
                  locals?.enums?.Category[c].slice(1).toLowerCase() %> <% }) %>
                </td>
              </tr>
              <tr>
                <td>Duration</td>
                <td><%= recipe.duration %></td>
              </tr>
              <tr>
                <td>Status</td>
                <td class="status-<%= recipe.id %>">
                  <%= locals?.enums?.Status[recipe.status][0] +
                  locals?.enums?.Status[recipe.status].slice(1).toLowerCase() %>
                </td>
              </tr>
            </table>
            <img src="<%= recipe.image %>" alt="" srcset="" height="205px" />
          </div>
          <p class="card-text"><%= recipe.description %></p>
          <% if(locals.user) { %>
          <div class="row">
            <form action="" method="post" class="recipe">
              <div class="align-items-center mb-3 row">
                <div class="mb-1 col-sm-1">
                  <img
                    src="<%= locals?.user?.avatar %>"
                    alt=""
                    style="width: 32px; height: 32px"
                    class="rounded-circle"
                  />
                </div>
                <div class="col-sm-11 form-control-sm">
                  <input type="hidden" name="object_id" value="<%= recipe.id %>" />
                  <input type="hidden" name="type" value="Recipe">
                  <input type="text" name="comment" id="<%= "comment_"+ recipe.id %>" class="form-control
                  " placeholder="<%= "Comment as " + locals?.user?.first_name + " "+
                  locals?.user?.last_name %>" />
                  <label for="<%= "comment_"+ recipe.id %>"">Press enter to post.</label>
                  <div class="invalid-feedback"></div>
                </div>
              </div>
            </form>
          </div>
          <% } %>
          <div class="recipe-comment">
    
            <% recipe?.Comments?.forEach(comment => { %>
              <div class="d-flex mb-1">
                <div class="me-3">
                  <img src="<%= comment.User.avatar %>" style="width: 32px; height: 32px;" class="rounded-circle" alt="">
                </div>
                <div style="width: 80%;">
                  <div class="d-flex flex-column p-3" style="background: #f0f2f5;border-radius: 10px;">
                    <div class="d-flex justify-content-between">                  
                      <b><%= comment.User.first_name + " "+ comment.User.last_name %> </b>
                      <div>
                        <% if(locals.user){ %>
                          <% if(comment.Favourites.length) { %>
                            <a href="javascript:void(0)" class="btn btn-sm btn-danger favourite" data-id="<%= comment.id %>" data-type="comment" data-is-favourite="true">Unfavourite</a>
                          <% } else { %>
                            <a href="javascript:void(0)" class="btn btn-sm btn-info favourite" data-id="<%= comment.id %>" data-type="comment" data-is-favourite="false">Favourite</a>
                          <% } %>
                          <% if(locals.user.id == comment.User.id){ %>
                            <button class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal" data-bs-id="<%= comment.id %>" data-bs-type="recipe">Delete</button>
                          <% } %>
                        <% } %>
                      </div>
                    </div>
                    <span style="font-size: 12px;"><%= dateFormat(comment.createdAt) %></span>
                  <span style="font-size:15px;" class="p-1"><%= comment.comment %></span>              
                  </div>
                  <% if(locals.user){ %>
                    <div class="my-1">
                      <a href="javascript:void(0)" class="text-decoration-none reply" style="color: #65676b;">Reply</a>
                      <form action="" method="post" class="comment" style="display: none;">
                        <div class="d-flex flex-nowrap">
                          <div class="mt-1">
                            <img
                              src="<%= locals?.user?.avatar %>"
                              alt=""
                              style="width: 32px; height: 32px"
                              class="rounded-circle"
                            />
                          </div>
                          <div class="col-sm-11 form-control-sm">
                            <input type="hidden" name="object_id" value="<%= comment.id %>" />
                            <input type="hidden" name="type" value="Comment">
                            <input type="text" name="comment" id="<%= "comment_"+ comment.id %>" class="form-control
                            " placeholder="<%= "Comment as " + locals?.user?.first_name + " "+
                            locals?.user?.last_name %>" />
                            <label for="<%= "comment_"+ comment.id %>"">Press enter to post.</label>
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>
                      </form>
                    </div>
                  <% }else { %>
                      <div class="my-3"></div>
                  <% } %>
                  <div class="comment-comment">
                    <% comment.SubComment.forEach(sub => { %>
                      <div class="d-flex mb-3">
                        <img src="<%= sub.User.avatar %>" style="width: 32px; height: 32px;" class="rounded-circle" alt="">
                      <div class="d-flex flex-column ms-2 p-3 w-100" style="background-color: #f0f2f5;border-radius: 10px;">
                        <div class="d-flex justify-content-between">
                          <b><%= sub.User.first_name + " "+ sub.User.last_name %> </b>
                          <div>
                              <% if(locals.user){ %>
                                <% if(sub.Favourites.length){ %>
                                  <a href="javascript:void(0)" class="btn btn-sm btn-danger favourite" data-id="<%= sub.id %>" data-type="comment" data-is-favourite="true">Unfavourite</a>
                                <%} else { %>
                                  <a href="javascript:void(0)" class="btn btn-sm btn-info favourite" data-id="<%= sub.id %>" data-type="comment" data-is-favourite="false">Favourite</a>
                                <% } %>
                                <% if(locals.user.id == sub.User.id){ %>
                                  <button class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal" data-bs-id="<%= sub.id %>" data-bs-type="comment">Delete</button>
                                <% } %>
                              <% } %>
                          </div>
                        </div>
                        <span style="font-size: 12px;"><%= dateFormat(sub.createdAt) %></span>
                        <span style="font-size:15px;" class="p-1"><%= sub.comment %></span>
                      </div>
                    </div>
                   <% })%>
                  </div>
                </div>
              </div>
           <% })%>
          </div>
        </div>
    </div>
    <script>
           const dateFormat = (d) =>
[d.getFullYear(),d.getMonth() + 1, d.getDate()].join("-") + " " + [d.getHours(),d.getMinutes(), d.getSeconds()].join(":");

    let exampleModal = document.getElementById('exampleModal');

    exampleModal.addEventListener('show.bs.modal', function (event) {
        // Button that triggered the modal
        let button = event.relatedTarget
        // Extract info from data-bs-* attributes
        let id = button.getAttribute('data-bs-id');
        let type = button.getAttribute('data-bs-type');
        exampleModal.querySelector("button.confirm").dataset.id = id;
        exampleModal.querySelector("button.confirm").dataset.type = type;
    });

    exampleModal.querySelector("button.confirm").addEventListener("click", e => {
      let id  = e.target.dataset.id;
      let type = e.target.dataset.type;
      fetch(`/recipe/${id}/comment`, {
        method: "DELETE",
        headers: {
        "Content-type": "application/json" 
        }
      }).then(r => r.json()).then(data => {
        console.log(data);
        if(type == "recipe"){
          document.querySelector(`[data-bs-id='${id}']`).closest("div.d-flex.mb-1").remove()
        }else{
          document.querySelector(`[data-bs-id='${id}']`).closest("div.d-flex.mb-3").remove()
        }
      // document.querySelector(`[data-bs-id='${id}']`).parentElement.parentElement.parentElement.parentElement.remove()
        const modal = bootstrap.Modal.getInstance(exampleModal); 
        modal.hide();
      })
    });

    let handelReply = reply => reply.addEventListener("click", e => {
        e.preventDefault();
        let form = reply.nextElementSibling;
        let display = form.style.display;
        if(display == "" || display == "none"){
          form.style.display = "block";
        }else{
          form.style.display = "none";
        }
    })

    let handelReplyForm = reply => {
        let form = reply.nextElementSibling;
        form.addEventListener("submit", e => {
          e.preventDefault();
          let formData = new FormData(e.target);
          let object_id = formData.get("object_id");
          fetch(`/recipe/${object_id}/comment`, {
            method: "POST",
            body: formData,
          }).then(r=>r.json()).then(data => {
            let commentComent = form.parentElement.nextElementSibling;
            let {avatar, first_name, last_name} = data.user
            let {id,comment,createdAt} = data.comment
            commentComent.insertAdjacentHTML("afterbegin",`<div class="d-flex mb-3">
                  <img src="${avatar}" style="width: 32px; height: 32px;" class="rounded-circle" alt="">
                <div class="d-flex flex-column ms-2 p-3 w-100" style="background-color: #f0f2f5;border-radius: 10px;">
                  <div class="d-flex justify-content-between">
                    <b>${first_name} ${last_name} </b>
                    <div>
                      <a href="javascript:void(0)" class="btn btn-sm btn-info favourite dynamic" data-id="${id}" data-type="comment" data-is-favourite="false">Favourite</a>
                      <button class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal" data-bs-id="${id}" data-bs-type="comment">Delete</button>
                    </div>
                    
                  </div>
                  <span style="font-size: 12px;">${createdAt.replace("T"," ").split(".")[0]}</span>
                  <span style="font-size:15px;" class="p-1">${comment}</span>
                </div>
              </div>`);
            form.querySelector("input[name='comment']").value = "";
            let newlyFavourite = document.querySelector(".favourite.dynamic");
            handelFavourite(newlyFavourite);
            newlyFavourite.classList.remove("dynamic");
            console.log(data);
          })
        });
      };

      let handelFavourite = favourite => favourite.addEventListener("click", e => {
        e.preventDefault();
        let {id, type, isFavourite} = e.target.dataset;
        console.log(id, type, isFavourite);
        if(isFavourite == "false"){
          fetch(`/favourite/${id}`, {
            method: "POST",
            headers:{
              "Content-type": "application/json"
            },
            body: JSON.stringify({type})
          }).catch( e=> {
            console.log(e);
          }).then(j => j.json()).then(data => {
            console.log(data);
            e.target.dataset.isFavourite = true;
            e.target.classList.remove("btn-info")
            e.target.classList.add("btn-danger")
            e.target.innerText = "Unfavourite"
          })
        }else{
          fetch(`/favourite/${id}`, {
            method: "PUT",
            headers:{
              "Content-type": "application/json"
            },
            body: JSON.stringify({type})
          }).catch( e=> {
            console.log(e);
          }).then(j => j.json()).then(data => {
            console.log(data);
            e.target.dataset.isFavourite = false;
            e.target.classList.remove("btn-danger")
            e.target.classList.add("btn-info")
            e.target.innerText = "Favourite"
          })
        }
      });
   
    let cards = document.querySelectorAll(".card");
    Array.from(cards).forEach(card =>{
      let form = card.querySelector("form.recipe");
      if(form){
        let input = form.querySelector("input[type='text']");
        input.addEventListener("focus", e => {
          e.target.classList.remove("is-invalid")
        },false);
        input.addEventListener("keyup", e => {
          if(e.keyCode != 13){
            e.target.classList.remove("is-invalid")
          }
        },false);
        form.addEventListener("submit", (e) => {
          e.preventDefault();
          let formData = new FormData(e.target);
          let object_id = formData.get("object_id");
          fetch(`/recipe/${object_id}/comment`, {
            method: "POST",
            body: formData,
          })
            .then((r) => {
              if (!r.ok) {
                let e = new Error("Http status code: " + r.status);
                e.response = Promise.resolve(r.json());
                throw e;
              }
              return r.json();
            })
            .catch((error) => {
              error.response.then((err) => {
                for (let i in err) {
                  let el = e.target.querySelector(`#${i}_${recipeId}`);
                  el.classList.add("is-invalid");
                  let msgEl = e.target.querySelector(`#${i}_${recipeId} ~ .invalid-feedback`);
                  msgEl.innerHTML = err[i].message;
                }
              });
            })
            .then((data) => {
              let {avatar, first_name, last_name} = data.user
              let {id, comment, createdAt} = data.comment
              let recipeComment = card.querySelector(".recipe-comment");
              recipeComment.insertAdjacentHTML("afterbegin", `<div class="d-flex mb-1">
              <div class="me-3">
                <img src="${avatar}" style="width: 32px; height: 32px;" class="rounded-circle" alt="">
              </div>
              <div style="width: 80%;">
                <div class="d-flex flex-column p-3" style="background: #f0f2f5;border-radius: 10px;">
                  <div class="d-flex justify-content-between">
                    <b>${first_name} ${last_name} </b>
                    <div>
                      <a href="javascript:void(0)" class="btn btn-sm btn-info favourite dynamic" data-id="${id}" data-type="comment" data-is-favourite="false">Favourite</a>
                      <button class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal" data-bs-id="${id}" data-bs-type="recipe">Delete</button>
                    </div>
                  </div>
                  <span style="font-size: 12px;">${createdAt.replace("T","").split(".")[0]}</span>
                <span style="font-size:15px;" class="p-1">${comment}</span>              
                </div>
                <div class="my-1">
                <a href="javascript:void(0)" class="text-decoration-none reply dynamic" style="color: #65676b;">Reply</a>
                <form action="" method="post" class="comment" style="display: none;">
                  <div class="d-flex flex-nowrap">
                    <div class="mt-1">
                      <img src="${avatar}" alt="" style="width: 32px; height: 32px" class="rounded-circle">
                    </div>
                    <div class="col-sm-11 form-control-sm">
                      <input type="hidden" name="object_id" value="${id}">
                      <input type="hidden" name="type" value="Comment">
                      <input type="text" name="comment" id="comment_${id}" class="form-control
                      " placeholder="Comment as ${first_name} ${last_name}">
                      <label for="comment_${id}" "="">Press enter to post.</label>
                      <div class="invalid-feedback"></div>
                    </div>
                  </div>
                </form>
                </div>
                <div class="comment-comment">
                  
                </div>
              </div>
            </div>`);

              let newlyReply = document.querySelector(".reply.dynamic");
              handelReply(newlyReply);
              handelReplyForm(newlyReply);
              newlyReply.classList.remove("dynamic");

              let newlyFavourite = document.querySelector(".favourite.dynamic");
              handelFavourite(newlyFavourite);
              newlyFavourite.classList.remove("dynamic");

              input.value = ""
            });
        });

        let replyLinks = card.querySelectorAll(".reply");
        Array.from(replyLinks).forEach(reply => {
          handelReply(reply);
          handelReplyForm(reply);
        })
      }
      
    });
      
    
    let favourites = document.querySelectorAll(".favourite");
    Array.from(favourites).forEach( favourite => {
      handelFavourite(favourite);
    })

    let publishes = document.querySelectorAll(".publish");
    Array.from(publishes).forEach( publish => {
        publish.addEventListener("click", e => {
            e.preventDefault();
            let {id, isPublished} = e.target.dataset
            console.log(id, isPublished);
            if(isPublished == "true"){
                fetch(`/recipe/${id}/publish`, {
                    method: "DELETE",
                    headers: {
                        "contentType": "application/json"
                    }
                }).then( j => j.json()).then(d => {
                    e.target.dataset.isPublished = "false"
                    e.target.innerText = "Publish"
                    e.target.classList.remove("btn-danger");
                    e.target.classList.add("btn-info");
                    document.querySelector(`.status-${id}`).innerText = "Pending"
                })
            }else{
                fetch(`/recipe/${id}/publish`, {
                    method: "Post",
                    headers: {
                        "contentType": "application/json"
                    }
                }).then( j => j.json()).then(d => {
                    e.target.dataset.isPublished = "true"
                    e.target.innerText = "Unpublish"
                    e.target.classList.remove("btn-info");
                    e.target.classList.add("btn-danger");
                    document.querySelector(`.status-${id}`).innerText = "Pass"
                })
            }
        })
    })

    let rejects = document.querySelectorAll(".reject");
    Array.from(rejects).forEach( reject => {
        reject.addEventListener("click", e => {
            e.preventDefault();
            let {id, isRejected} = e.target.dataset
            console.log(id, isRejected);
            if(isRejected == "true"){
                fetch(`/recipe/${id}/reject`, {
                    method: "DELETE",
                    headers: {
                        "contentType": "application/json"
                    }
                }).then( j => j.json()).then(d => {
                    e.target.dataset.isRejected = "false";
                    e.target.innerText = "Reject";
                    e.target.classList.add("btn-danger");
                    e.target.classList.remove("btn-info");
                    e.target.previousElementSibling.style.display = "inline-block";
                    document.querySelector(`.status-${id}`).innerText = "Pending";
                    e.target.previousElementSibling.dataset.isPublished = "false";
                    e.target.previousElementSibling.innerText = "Publish";
                    e.target.previousElementSibling.classList.remove("btn-danger")
                    e.target.previousElementSibling.classList.add("btn-info")
                    let overlay = e.target.closest(".card").querySelector(".card-body > div")
                    overlay.classList.remove("overlay");
                })
            }else{
                fetch(`/recipe/${id}/reject`, {
                    method: "Post",
                    headers: {
                        "contentType": "application/json"
                    }
                }).then( j => j.json()).then(d => {
                    e.target.dataset.isRejected = "true";
                    e.target.classList.remove("btn-danger");
                    e.target.classList.add("btn-info");
                    e.target.innerText = "Restore";
                    e.target.previousElementSibling.style.display = "none";
                    document.querySelector(`.status-${id}`).innerText = "Rejected";
                    let overlay = e.target.closest(".card").querySelector(".card-body > div")
                    overlay.classList.add("overlay");                    
                })
            }
        })
    })

    </script>
</div>
<% } %>
<%- include("../layouts/footer") %>
